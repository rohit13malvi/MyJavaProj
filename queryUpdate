
 @Query(value = "UPDATE emp " +
                   "SET empName = CASE WHEN :empNameParam IS NULL THEN empName ELSE :empNameParam END, " +
                   "empAge = CASE WHEN :empAgeParam IS NULL THEN empAge ELSE :empAgeParam " +
                   "WHERE empid = :empIdParam", nativeQuery = true)
//
 EmailMessages updateEmailMessageInfo(MissingEmailInfoRequest missingEmailInfoRequest,UUID uuid) throws Exception {
        Integer emailMessageId = missingEmailInfoRequest.getEmailMessageId();
        EmailMessages emailmessages = null;
        LOGGER.info("EmailMessagesService::updateEmailMessageInfo# updating language and party id   " +
                "missingEmailInfoRequest{},uuid={}", missingEmailInfoRequest, uuid);
        try {
            emailmessages = emailMessagesRepository.findByEmailMessageId(emailMessageId);

            String language = missingEmailInfoRequest.getLanguage();
            Integer partyId = missingEmailInfoRequest.getPartyId();

            if (language != null || partyId != null) {

                if (missingEmailInfoRequest.getLanguage() != null) {
                    emailmessages.setLanguage(missingEmailInfoRequest.getLanguage());
                }

                if (missingEmailInfoRequest.getPartyId() != null) {
                    emailmessages.setPartyId(missingEmailInfoRequest.getPartyId());
                }

                emailmessages = emailMessagesRepository.save(emailmessages);
            }

        } catch (Exception e) {
            LOGGER.info("EmailMessagesService::updateEmailMessageInfo# Exception occured while updating language/party info for email Message Id emailMessageId{} " +
                    ",uuid={},Exception()", emailMessageId, uuid, e);
            throw new Exception(
                    "Exception occured while updating language/party info for email Message Id " + emailMessageId);
        }
        return emailmessages;

    }
