con.

    @RequestMapping(value = "/email-labels", produces = { "application/json" }, method = RequestMethod.GET)
 public ResponseEntity<CMTEmailLocationResponseDTO> emailLocation(CMTEmailLocationRequestDTO cmtEmailLocationRequestDTO, UUID uuid) {
        ResponseEntity<CMTEmailLocationResponseDTO> response;
        try {
            CMTEmailLocationResponseDTO  cmtEmailLocationResponseDTO=cmtEmailLocationService.getEmailLocations(cmtEmailLocationRequestDTO,uuid);
            response=new ResponseEntity<>(cmtEmailLocationResponseDTO,HttpStatus.OK);
        }catch (Exception e){
            response=new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
        return response;
    }
---
ser.

 public CMTEmailLocationResponseDTO getEmailLocations(CMTEmailLocationRequestDTO cmtEmailLocationRequestDTO, UUID uuid){

        CMTEmailLocationResponseDTO cmtEmailLocationResponseDTO= new CMTEmailLocationResponseDTO();
        try {
            if (cmtEmailLocationRequestDTO.getEquipmentId() != null) {
                cmtEmailLocationResponseDTO = cmtEmailLocationRequestDTO.getEquipmentType().equalsIgnoreCase("circuit") ?
                    cmtLocationRepository.getCircuitLocationId(cmtEmailLocationRequestDTO.getEquipmentId()) :
                    cmtLocationRepository.getDeviceLocationId(cmtEmailLocationRequestDTO.getEquipmentId());
            } else {
                Integer areaLocationId = cmtLocationRepository.getAreaLocationId(cmtEmailLocationRequestDTO.getCity(),
                    cmtEmailLocationRequestDTO.getState(),
                    cmtEmailLocationRequestDTO.getCountry());
                cmtEmailLocationResponseDTO.setUtsLocationId(areaLocationId);
            }
        }
        catch(Exception e){

        }
        return cmtEmailLocationResponseDTO;
    }
