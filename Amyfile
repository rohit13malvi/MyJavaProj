 if(editAttributesDTO.getOutageUOM() != null){
            EmailMessageExtractionAuditLog emailMessageExtractionAuditLog = new EmailMessageExtractionAuditLog();
            emailMessageExtraction.setOutageDurationUom(editAttributesDTO.getOutageUOM().get(newValue));
            emailMessageExtractionAuditLog.setAction("Edit");
            emailMessageExtractionAuditLog.setItemChanged("Outage UOM");
            emailMessageExtractionAuditLog.setModifiedBy(editAttributesDTO.getModifiedBy());
            emailMessageExtractionAuditLog.setModifiedDate(editAttributesDTO.getModifiedDate());
            emailMessageExtractionAuditLog.setOldValue(editAttributesDTO.getOutageUOM().get(oldValue));
            emailMessageExtractionAuditLog.setNewValue(editAttributesDTO.getOutageUOM().get(newValue));
            emailMessageExtractionAuditLog.setEmailMessageExtractionId(email_message_extraction_id);
            emailMessageExtractionAuditLogRepository.save(emailMessageExtractionAuditLog);
            action[0]=true;
            LOGGER.info("editAttributes :Outage UOM details was updated: uuid={}",uuid);
        }
        if(editAttributesDTO.getNumberOfOutages() != null){
            EmailMessageExtractionAuditLog emailMessageExtractionAuditLog = new EmailMessageExtractionAuditLog();
            String numberOfOutage= (String.valueOf(editAttributesDTO.getNumberOfOutages())).;
            emailMessageExtraction.setOutageNumber (numberOfOutage.getget(String.valueOf()newValue));
            emailMessageExtractionAuditLog.setAction("Edit");
---
String newValue = "newValue";
String oldValue = "oldValue";

if (editAttributesDTO.getNumberOfOutages() != null) { // Assuming getNumberOfOutages() returns an Integer
    int newNumberOfOutages = editAttributesDTO.getNumberOfOutages();
    int oldNumberOfOutages = 0; // Or any default integer representation of the old value

    if (newNumberOfOutages != oldNumberOfOutages) {
        EmailMessageExtractionAuditLog emailMessageExtractionAuditLog = new EmailMessageExtractionAuditLog();

        // Use integer values directly
        emailMessageExtractionAuditLog.setAction("Edit");
        emailMessageExtractionAuditLog.setItemChanged("Number of Outages");
        emailMessageExtractionAuditLog.setModifiedBy(editAttributesDTO.getModifiedBy());
        emailMessageExtractionAuditLog.setModifiedDate(editAttributesDTO.getModifiedDate());
        emailMessageExtractionAuditLog.setOldValue(String.valueOf(oldNumberOfOutages));
        emailMessageExtractionAuditLog.setNewValue(String.valueOf(newNumberOfOutages));
        emailMessageExtractionAuditLog.setEmailMessageExtractionId(email_message_extraction_id);
        emailMessageExtractionAuditLogRepository.save(emailMessageExtractionAuditLog);
        action[0] = true;
        LOGGER.info("editAttributes: Number of Outages details were updated: uuid={}", uuid);
    }
}
===
String newValue = "newValue";
String oldValue = "oldValue";

if (editAttributesDTO.getNumberOfOutages() != null) {
    int newNumberOfOutages = Integer.parseInt(newValue);
    int oldNumberOfOutages = Integer.parseInt(oldValue);

    int numberOfOutagesFromDTO = editAttributesDTO.getNumberOfOutages();

    if (numberOfOutagesFromDTO != oldNumberOfOutages) {
        EmailMessageExtractionAuditLog emailMessageExtractionAuditLog = new EmailMessageExtractionAuditLog();

        // Convert numberOfOutagesFromDTO to string
        String numberOfOutagesAsString = String.valueOf(numberOfOutagesFromDTO);

        // Set NumberOfOutages using converted string
        emailMessageExtraction.setNumberOfOutages(numberOfOutagesAsString);

        // Create and save the audit log
        emailMessageExtractionAuditLog.setAction("Edit");
        emailMessageExtractionAuditLog.setItemChanged("Number of Outages");
        emailMessageExtractionAuditLog.setModifiedBy(editAttributesDTO.getModifiedBy());
        emailMessageExtractionAuditLog.setModifiedDate(editAttributesDTO.getModifiedDate());
        emailMessageExtractionAuditLog.setOldValue(oldValue);
        emailMessageExtractionAuditLog.setNewValue(newValue);
        emailMessageExtractionAuditLog.setEmailMessageExtractionId(email_message_extraction_id);
        emailMessageExtractionAuditLogRepository.save(emailMessageExtractionAuditLog);

        action[0] = true;
    }
}

